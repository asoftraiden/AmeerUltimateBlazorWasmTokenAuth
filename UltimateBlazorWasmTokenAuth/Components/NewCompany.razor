@inject IRepositoryManager repositoryManager


<!-- Button to Open Modal -->
<button class="btn btn-primary" @onclick="() => showModal = true">New</button>

<!-- Modal -->
@if (showModal)
{
    <div class="modal fade show" tabindex="-1" style="display: block;" aria-modal="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Company</h5>
                    <button type="button" class="btn-close" @onclick="() => showModal = false" />
                </div>
                <div class="modal-body">
                    <EditForm Model="newCompany">
                        <div class="mb-3">
                            <InputText @bind-Value="newCompany.Name" class="form-control" placeholder="Name" />
                        </div>
                        <div class="mb-3">
                            <InputText @bind-Value="newCompany.Country" class="form-control" placeholder="Country" />
                        </div>
                        <div class="mb-3">
                            <InputText @bind-Value="newCompany.Address" class="form-control" placeholder="Address" />
                        </div>
                    </EditForm>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="() => showModal = false">Close</button>
                    <button class="btn btn-primary" @onclick="HandleValidSubmit">
                        Save
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        }
                    </button>
                    @if (errorMessage is not null)
                    {
                        <p class="text-danger ms-3 mb-0">@errorMessage</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}









@code {
    private CompanyForCreationDto newCompany = new();
    private bool showModal = false;
    private bool isLoading = false;
    private HttpResponseMessage? message;
    private string errorMessage = "No Errors";
    private CompanyDto? createdCompany;
    public void Show()
    {
        newCompany = new();
        showModal = true;
    }

    public void Close()
    {
        showModal = false;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            isLoading = true;
            (message, createdCompany) = await repositoryManager.Company.CreateCompanyAsync(newCompany);
            Close();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}
